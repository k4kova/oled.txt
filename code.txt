#include <WiFi.h>                   // ESP32'nin Wi-Fi baÄŸlantÄ±sÄ± iÃ§in gerekli kÃ¼tÃ¼phane
#include <Wire.h>                   // I2C iletiÅŸimi iÃ§in gerekli kÃ¼tÃ¼phane (OLED ekran iÃ§in)
#include <Adafruit_SSD1306.h>        // OLED ekranÄ± kontrol etmek iÃ§in kullanÄ±lan kÃ¼tÃ¼phane
#include <WebServer.h>               // ESP32'nin bir web sunucusu olarak Ã§alÄ±ÅŸmasÄ±nÄ± saÄŸlayan kÃ¼tÃ¼phane

// Wi-Fi aÄŸ adÄ± (SSID) ve ÅŸifresi
const char* ssid = "wifi adÄ±nÄ±z";    // BaÄŸlanÄ±lacak Wi-Fi aÄŸÄ± adÄ±
const char* password = "wifinin ÅŸifresi"; // BaÄŸlanÄ±lacak Wi-Fi aÄŸÄ± ÅŸifresi

WebServer server(80); // ESP32'nin HTTP sunucusunu 80. portta baÅŸlatÄ±r

// OLED ekranÄ±n geniÅŸliÄŸi ve yÃ¼ksekliÄŸi tanÄ±mlanÄ±yor
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// OLED ekran nesnesi oluÅŸturuluyor (Adafruit SSD1306 sÃ¼rÃ¼cÃ¼sÃ¼ ile)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Gelen mesajÄ± saklamak iÃ§in deÄŸiÅŸkenler
String receivedMessage = "Bekleniyor..."; // Web arayÃ¼zÃ¼nden gelen mesaj buraya kaydedilecek
String ipAddress = "BaÄŸlanÄ±yor...";       // ESP32'nin aldÄ±ÄŸÄ± IP adresi burada saklanacak

// Web arayÃ¼zÃ¼nde gÃ¶rÃ¼ntÃ¼lenecek HTML sayfasÄ±
String htmlPage = R"rawliteral(
<!DOCTYPE html>
<html>
<head>
    <title>ESP32 OLED</title>
    <meta charset="UTF-8">
</head>
<body style="text-align:center;">
    <h2>ESP32 OLED Ekran</h2>
    <form action="/message" method="GET">
        <input type="text" name="msg" placeholder="MesajÄ±nÄ±zÄ± yazÄ±n">
        <input type="submit" value="GÃ¶nder">
    </form>
</body>
</html>
)rawliteral"; 
// HTML kodlarÄ± "" iÃ§inde tanÄ±mlandÄ±ÄŸÄ± iÃ§in web tarayÄ±cÄ±sÄ±na gÃ¶nderilecek sayfanÄ±n tasarÄ±mÄ±nÄ± belirler.
// KullanÄ±cÄ± buraya bir mesaj yazÄ±p "GÃ¶nder" butonuna basarak ESP32'ye mesaj gÃ¶nderebilir.

// ğŸ“Œ Wi-Fi'ye baÄŸlanma fonksiyonu
void setup_wifi() {
    WiFi.begin(ssid, password); // Wi-Fi aÄŸÄ±na baÄŸlanmayÄ± baÅŸlat
    Serial.print("WiFi baÄŸlanÄ±yor...");
    
    while (WiFi.status() != WL_CONNECTED) { // Wi-Fi baÄŸlantÄ±sÄ± kurulana kadar bekle
        delay(1000);
        Serial.print("."); // BaÄŸlantÄ± kurulana kadar her saniye bir nokta yazdÄ±r
    }
    
    Serial.println("\nWiFi BaÄŸlandÄ±!");
    ipAddress = WiFi.localIP().toString(); // ESP32'nin aldÄ±ÄŸÄ± IP adresini deÄŸiÅŸkene kaydet

    Serial.print("ESP32 IP Adresi: ");
    Serial.println(ipAddress);

    // OLED ekrana IP adresini yazdÄ±r
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 10);
    display.println("ESP32 IP:");
    display.println(ipAddress);
    display.display();
}

// ğŸ“Œ Web sunucusu Ã¼zerinden mesaj alma fonksiyonu
void handleMessage() {
    if (server.hasArg("msg")) { // EÄŸer kullanÄ±cÄ± bir mesaj girdiyse
        receivedMessage = server.arg("msg"); // Girilen mesajÄ± al ve deÄŸiÅŸkene kaydet
        Serial.println("Gelen Mesaj: " + receivedMessage); // Konsola yazdÄ±r

        // OLED ekrana mesajÄ± yazdÄ±r
        display.clearDisplay();
        display.setCursor(0, 10);
        display.setTextSize(1);
        display.setTextColor(SSD1306_WHITE);
        display.println("Mesaj:");
        display.println(receivedMessage);
        display.display();
    }

    server.send(200, "text/html", htmlPage); // KullanÄ±cÄ±ya HTML sayfasÄ±nÄ± tekrar gÃ¶ster
}

// ğŸ“Œ Kurulum fonksiyonu (ESP32 ilk aÃ§Ä±ldÄ±ÄŸÄ±nda Ã§alÄ±ÅŸÄ±r)
void setup() {
    Serial.begin(115200); // Seri haberleÅŸmeyi baÅŸlat (hata ayÄ±klama iÃ§in)

    // OLED ekranÄ± baÅŸlat
    if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // OLED ekranÄ±n I2C adresi 0x3C olarak tanÄ±mlÄ±
        Serial.println("OLED baÅŸlatÄ±lamadÄ±!");
        while (1); // Hata olursa sonsuz dÃ¶ngÃ¼ye gir
    }

    // OLED ekrana baÄŸlantÄ± bilgisi yazdÄ±r
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 10);
    display.println("WiFi'ye baglaniyor...");
    display.display();

    setup_wifi(); // Wi-Fi baÄŸlantÄ±sÄ±nÄ± baÅŸlat ve IP adresini OLED ekrana yazdÄ±r

    // Web sunucusuna istemci baÄŸlantÄ±sÄ± iÃ§in endpoint tanÄ±mlamalarÄ±
    server.on("/", []() { server.send(200, "text/html", htmlPage); }); // Ana sayfa ("/") isteÄŸine HTML sayfasÄ±nÄ± gÃ¶nder
    server.on("/message", handleMessage); // "/message" isteÄŸi geldiÄŸinde handleMessage() fonksiyonunu Ã§aÄŸÄ±r

    server.begin(); // Web sunucusunu baÅŸlat
    Serial.println("Web sunucusu baÅŸlatÄ±ldÄ±!");
}

// ğŸ“Œ Ana dÃ¶ngÃ¼ fonksiyonu (ESP32 Ã§alÄ±ÅŸtÄ±ÄŸÄ± sÃ¼rece sÃ¼rekli Ã§alÄ±ÅŸÄ±r)
void loop() {
    server.handleClient(); // Web sunucusu gelen istekleri sÃ¼rekli kontrol eder
}